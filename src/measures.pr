{*

Generate all measure tokens as named variables.
Tokens are named by their group path and then name, 
and their value rendered using `rendered-measure` blueprint

*}
{[ global CURRENT_TYPE = "Measure" /]}

{[ let brand = ds.currentBrand() /]}
{[ const behavior = getBehavior(CURRENT_TYPE) /]}
{[ const groups = ds.tokenGroupsOfType(CURRENT_TYPE, brand.id) /]}

{[ for group in groups ]}
export const {{ group.name }} = {
  {[ let tokens = ds.tokensByGroupId(group.id) /]}
  {[ for token in tokens ]}
  {{token.name}}: '{[ inject "rendered-value" context token /]}',
  {[/]}
};


{[/]}
